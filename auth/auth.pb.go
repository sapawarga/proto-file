// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package auth

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequestDecodeToken struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestDecodeToken) Reset()         { *m = RequestDecodeToken{} }
func (m *RequestDecodeToken) String() string { return proto.CompactTextString(m) }
func (*RequestDecodeToken) ProtoMessage()    {}
func (*RequestDecodeToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0}
}

func (m *RequestDecodeToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestDecodeToken.Unmarshal(m, b)
}
func (m *RequestDecodeToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestDecodeToken.Marshal(b, m, deterministic)
}
func (m *RequestDecodeToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestDecodeToken.Merge(m, src)
}
func (m *RequestDecodeToken) XXX_Size() int {
	return xxx_messageInfo_RequestDecodeToken.Size(m)
}
func (m *RequestDecodeToken) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestDecodeToken.DiscardUnknown(m)
}

var xxx_messageInfo_RequestDecodeToken proto.InternalMessageInfo

type ResponsesDecodeToken struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	RoleLabel            string   `protobuf:"bytes,3,opt,name=role_label,json=roleLabel,proto3" json:"role_label,omitempty"`
	LastLoginAt          string   `protobuf:"bytes,4,opt,name=last_login_at,json=lastLoginAt,proto3" json:"last_login_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponsesDecodeToken) Reset()         { *m = ResponsesDecodeToken{} }
func (m *ResponsesDecodeToken) String() string { return proto.CompactTextString(m) }
func (*ResponsesDecodeToken) ProtoMessage()    {}
func (*ResponsesDecodeToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{1}
}

func (m *ResponsesDecodeToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponsesDecodeToken.Unmarshal(m, b)
}
func (m *ResponsesDecodeToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponsesDecodeToken.Marshal(b, m, deterministic)
}
func (m *ResponsesDecodeToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponsesDecodeToken.Merge(m, src)
}
func (m *ResponsesDecodeToken) XXX_Size() int {
	return xxx_messageInfo_ResponsesDecodeToken.Size(m)
}
func (m *ResponsesDecodeToken) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponsesDecodeToken.DiscardUnknown(m)
}

var xxx_messageInfo_ResponsesDecodeToken proto.InternalMessageInfo

func (m *ResponsesDecodeToken) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ResponsesDecodeToken) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ResponsesDecodeToken) GetRoleLabel() string {
	if m != nil {
		return m.RoleLabel
	}
	return ""
}

func (m *ResponsesDecodeToken) GetLastLoginAt() string {
	if m != nil {
		return m.LastLoginAt
	}
	return ""
}

func init() {
	proto.RegisterType((*RequestDecodeToken)(nil), "auth.RequestDecodeToken")
	proto.RegisterType((*ResponsesDecodeToken)(nil), "auth.ResponsesDecodeToken")
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_8bbd6f3875b0e874) }

var fileDescriptor_8bbd6f3875b0e874 = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x3f, 0x4b, 0xc6, 0x30,
	0x10, 0xc6, 0x49, 0xdf, 0x17, 0xb5, 0x57, 0x74, 0x08, 0x1d, 0x42, 0x41, 0x28, 0x9d, 0x3a, 0x45,
	0xd0, 0x4f, 0x50, 0x75, 0x70, 0xe8, 0x14, 0x9c, 0x5c, 0x4a, 0x6a, 0x0e, 0x5b, 0x8c, 0x49, 0xcd,
	0x9f, 0x8f, 0xe0, 0xf7, 0x96, 0x04, 0x94, 0x42, 0xb7, 0xbb, 0xdf, 0xef, 0x86, 0xe7, 0x39, 0x00,
	0x19, 0xc3, 0xc2, 0x37, 0x67, 0x83, 0xa5, 0xe7, 0x34, 0x77, 0x35, 0x50, 0x81, 0xdf, 0x11, 0x7d,
	0x78, 0xc6, 0x77, 0xab, 0xf0, 0xd5, 0x7e, 0xa2, 0xe9, 0x7e, 0x08, 0xd4, 0x02, 0xfd, 0x66, 0x8d,
	0x47, 0xbf, 0x13, 0xf4, 0x06, 0x8a, 0x55, 0x31, 0xd2, 0x92, 0xfe, 0x24, 0x8a, 0x55, 0xd1, 0x06,
	0xae, 0xa2, 0x47, 0x67, 0xe4, 0x17, 0xb2, 0xa2, 0x25, 0x7d, 0x29, 0xfe, 0x77, 0x7a, 0x0b, 0xe0,
	0xac, 0xc6, 0x49, 0xcb, 0x19, 0x35, 0x3b, 0x65, 0x5b, 0x26, 0x32, 0x26, 0x40, 0x3b, 0xb8, 0xd6,
	0xd2, 0x87, 0x49, 0xdb, 0x8f, 0xd5, 0x4c, 0x32, 0xb0, 0x73, 0xbe, 0xa8, 0x12, 0x1c, 0x13, 0x1b,
	0xc2, 0xbd, 0x80, 0x6a, 0x88, 0x61, 0x79, 0x91, 0x46, 0x69, 0x74, 0xf4, 0x09, 0xaa, 0x7d, 0x18,
	0xc6, 0x73, 0x9d, 0x63, 0xfe, 0xa6, 0xf9, 0x33, 0xc7, 0x0a, 0x8f, 0xe5, 0xdb, 0x25, 0xe7, 0x77,
	0xc9, 0xcf, 0x17, 0xf9, 0x13, 0x0f, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x68, 0x82, 0x10,
	0x17, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthHandlerClient is the client API for AuthHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthHandlerClient interface {
	DecodeToken(ctx context.Context, in *RequestDecodeToken, opts ...grpc.CallOption) (*ResponsesDecodeToken, error)
}

type authHandlerClient struct {
	cc *grpc.ClientConn
}

func NewAuthHandlerClient(cc *grpc.ClientConn) AuthHandlerClient {
	return &authHandlerClient{cc}
}

func (c *authHandlerClient) DecodeToken(ctx context.Context, in *RequestDecodeToken, opts ...grpc.CallOption) (*ResponsesDecodeToken, error) {
	out := new(ResponsesDecodeToken)
	err := c.cc.Invoke(ctx, "/auth.AuthHandler/DecodeToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthHandlerServer is the server API for AuthHandler service.
type AuthHandlerServer interface {
	DecodeToken(context.Context, *RequestDecodeToken) (*ResponsesDecodeToken, error)
}

// UnimplementedAuthHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedAuthHandlerServer struct {
}

func (*UnimplementedAuthHandlerServer) DecodeToken(ctx context.Context, req *RequestDecodeToken) (*ResponsesDecodeToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecodeToken not implemented")
}

func RegisterAuthHandlerServer(s *grpc.Server, srv AuthHandlerServer) {
	s.RegisterService(&_AuthHandler_serviceDesc, srv)
}

func _AuthHandler_DecodeToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDecodeToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthHandlerServer).DecodeToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.AuthHandler/DecodeToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthHandlerServer).DecodeToken(ctx, req.(*RequestDecodeToken))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.AuthHandler",
	HandlerType: (*AuthHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DecodeToken",
			Handler:    _AuthHandler_DecodeToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}
